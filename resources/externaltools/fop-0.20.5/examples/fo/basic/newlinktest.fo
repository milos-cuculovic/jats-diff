<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format">
  <fo:layout-master-set>

    <!-- layout for the first page -->
    <fo:simple-page-master master-name="first"
                  margin-top="1in" 
                  margin-bottom="1in" 
                  margin-left="1in" 
                  margin-right="1in">
      <fo:region-body/>
    </fo:simple-page-master>


  </fo:layout-master-set>
  <!-- end: defines page layout -->

  <!-- actual layout -->
  <fo:page-sequence master-reference="first">




<fo:flow flow-name="xsl-region-body">

  <fo:block space-after.optimum="3pt" font-family="serif" id="block1">
     FOP is the world's first print formatter driven by XSL formatting
     objects. It is a Java 1.1 application that reads a formatting object
     tree and then turns it into a PDF document. The formatting object
     tree, can be in the form of an XML document (output by an XSLT engine
     like XT or Xalan) or can be passed in memory as a DOM Document or (in
     the case of XT) SAX events.
  </fo:block>

  <fo:block space-after.optimum="12pt" font-family="serif">FOP is part of Apache's XML project. The homepage of FOP is 
     <fo:inline font-style="italic" font-family="serif"><fo:basic-link color="blue" external-destination="http://xml.apache.org/fop">http://xml.apache.org/fop</fo:basic-link></fo:inline>
  </fo:block>

<fo:block space-after.optimum="12pt" font-family="serif" font-weight="bold" text-align="center">
align="start"
</fo:block>

<fo:block space-after.optimum="12pt" font-family="serif" text-align="start">
     Apache FOP is the world's first print formatter driven by XSL formatting
     objects. It is a Java 1.1 application that reads a <fo:basic-link internal-destination="block1" color="blue">formatting object</fo:basic-link>
     tree and then turns it into a <fo:basic-link internal-destination="block1" color="blue">PDF document</fo:basic-link>. The formatting object
     tree, can be in the form of an XML <fo:basic-link internal-destination="block1" color="blue">document</fo:basic-link> (output by an XSLT engine
     like XT or Xalan) or can be passed in memory as a DOM Document or (in
     the case of XT) SAX events.

  </fo:block>

<fo:block space-after.optimum="12pt" font-family="serif" font-weight="bold" text-align="center">
align="center"
</fo:block>

<fo:block space-after.optimum="12pt" font-family="serif" text-align="center">
     Apache FOP is the world's first print formatter driven by XSL formatting
     objects. It is a Java 1.1 application that reads a <fo:basic-link internal-destination="block1" color="blue">formatting object</fo:basic-link>
     tree and then turns it into a <fo:basic-link internal-destination="block1" color="blue">PDF document</fo:basic-link>. The formatting object
     tree, can be in the form of an XML <fo:basic-link internal-destination="block1" color="blue">document</fo:basic-link> (output by an XSLT engine
     like XT or Xalan) or can be passed in memory as a DOM Document or (in
     the case of XT) SAX events.

  </fo:block>

<fo:block space-after.optimum="12pt" font-family="serif" font-weight="bold" text-align="center">
align="justify"
</fo:block>

  <fo:block space-after.optimum="12pt" font-family="serif" text-align="justify">
     Apache FOP is the world's first print formatter driven by XSL formatting
     objects. It is a Java 1.1 application that reads a <fo:basic-link internal-destination="block1" color="blue">formatting object</fo:basic-link>
     tree and then turns it into a <fo:basic-link internal-destination="block1" color="blue">PDF document</fo:basic-link>. The formatting object
     tree, can be in the form of an XML <fo:basic-link internal-destination="block1" color="blue">document</fo:basic-link> (output by an XSLT engine
     like XT or Xalan) or can be passed in memory as a DOM Document or (in
     the case of XT) SAX events.

  </fo:block>

<!-- table start -->
    <fo:table table-layout="fixed">
      <fo:table-column column-width="50mm"/>
      <fo:table-column column-width="50mm"/>
      <fo:table-column column-width="50mm"/>
      <fo:table-body>
        <fo:table-row>
          <fo:table-cell ><fo:block>good</fo:block></fo:table-cell>
          <fo:table-cell ><fo:block>bad</fo:block></fo:table-cell>
          <fo:table-cell ><fo:block><fo:basic-link internal-destination="block1" color="blue">ugly</fo:basic-link></fo:block></fo:table-cell>
        </fo:table-row>
        <fo:table-row>
          <fo:table-cell ><fo:block>nice</fo:block></fo:table-cell>
          <fo:table-cell ><fo:block><fo:basic-link internal-destination="block1" color="blue">dice</fo:basic-link></fo:block></fo:table-cell>
          <fo:table-cell ><fo:block>vice</fo:block></fo:table-cell>
        </fo:table-row>
        <fo:table-row>
          <fo:table-cell ><fo:block>literature</fo:block></fo:table-cell>
          <fo:table-cell ><fo:block>music</fo:block></fo:table-cell>
          <fo:table-cell ><fo:block><fo:basic-link internal-destination="block1" color="blue">art</fo:basic-link></fo:block></fo:table-cell>
        </fo:table-row>
        <fo:table-row>
          <fo:table-cell ><fo:block><fo:basic-link internal-destination="block1" color="blue">java</fo:basic-link></fo:block></fo:table-cell>
          <fo:table-cell ><fo:block>perl</fo:block></fo:table-cell>
          <fo:table-cell ><fo:block>python</fo:block></fo:table-cell>
        </fo:table-row>
      </fo:table-body>
    </fo:table>
    <!-- table end -->


</fo:flow>

</fo:page-sequence>
</fo:root>
